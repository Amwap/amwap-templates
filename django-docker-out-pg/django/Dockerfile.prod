###########
# BUILDER #
###########

# pull official base image
FROM python:3.12.0a3-alpine as builder

# set work directory
WORKDIR /usr/src/django

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev

# lint
RUN pip install --upgrade pip
RUN pip install flake8==6.0.0
RUN flake8 --ignore=E501,F401 

COPY . .


# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/django/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.12.0a3-alpine

# create directory for the django user
RUN mkdir -p /home/django

# create the django user
RUN addgroup -S django && adduser -S django -G django

# create the appropriate directories
ENV HOME=/home/django
ENV APP_HOME=/home/django
# RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/mediafiles
WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add libpq
COPY --from=builder /usr/src/django/wheels /wheels
COPY --from=builder /usr/src/django/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint.prod.sh
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint.prod.sh
RUN chmod +x  $APP_HOME/entrypoint.prod.sh

# copy project
COPY . $APP_HOME

# chown all the files to the django user
RUN chown -R django:django $APP_HOME

# change to the django user
USER django

# run entrypoint.prod.sh
ENTRYPOINT ["/home/django/entrypoint.prod.sh"]